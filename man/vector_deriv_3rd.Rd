% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vector_deriv.R
\name{vector_deriv_3rd}
\alias{vector_deriv_3rd}
\title{3rd order vector derivative of a scalar function}
\usage{
vector_deriv_3rd(
  func,
  x,
  method = "Richardson",
  side = NULL,
  method.args = list(),
  output = "matrix",
  ...
)
}
\arguments{
\item{func}{scalar function that takes vector input \code{x}.}

\item{x}{a real scalar or vector argument to func, indicating the 
      point(s) at which the gradient is to be calculated.}

\item{method}{currently only \code{"Richardson"} is implemented for the approximation.}

\item{side}{an indication of whether one-sided derivatives should be attempted.}

\item{method.args}{arguments passed to method. Arguments not specified 
       remain with their default values as specified in details}

\item{output}{either \code{"matrix"} or \code{"array"}.}

\item{...}{an additional arguments passed to \code{func}.
          WARNING: None of these should have names matching other arguments of this function.}
}
\value{
numeric square matrix or 3-D array depending on \code{output} argument.
}
\description{
Calculate a numerical approximation to the
3rd order vector derivative of a scalar function at a parameter value.
}
\examples{
f <- function(x) norm(x, type = "2")
x <- 1:3
vector_deriv_3rd(f, x)
vector_deriv_3rd(f, x, output = "array")
}
\seealso{
\link{vector_deriv_4th}, \link{matrix_deriv}, \link[numDeriv:grad]{numDeriv::grad}, \link[numDeriv:hessian]{numDeriv::hessian}
}
